name: Documentation Quality

on:
  push:
    branches: [ main ]
    paths:
      - "**/*.md"
      - ".vale.ini"
      - ".markdownlint.json"
      - "config/vocabularies/**"
  pull_request:
    branches: [ main ]
    paths:
      - "**/*.md"
      - ".vale.ini"
      - ".markdownlint.json"
      - "config/vocabularies/**"
  workflow_dispatch:

jobs:
  doclint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # ---------- Markdownlint ----------
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli

      - name: Run markdownlint
        run: markdownlint "**/*.md" --ignore node_modules

      # ---------- Codespell ----------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install codespell
        run: pip install codespell

      - name: Run codespell
        run: |
          codespell \
            --ignore-words-list="crate,fo,ba,teh" \
            --skip="./node_modules,./.git,./styles" \
            --quiet-level=2

      # ---------- Vale (install via tarball; robust) ----------
      - name: Install Vale
        shell: bash
        run: |
          set -euo pipefail
          url="$(curl -fsSL https://api.github.com/repos/errata-ai/vale/releases/latest \
            | grep browser_download_url \
            | grep Linux_64-bit.tar.gz \
            | cut -d '"' -f 4)"
          echo "Downloading: $url"
          curl -fsSL "$url" -o vale.tar.gz
          mkdir -p "$RUNNER_TEMP/vale_extract"
          tar -xzf vale.tar.gz -C "$RUNNER_TEMP/vale_extract"
          VALE_PATH="$(find "$RUNNER_TEMP/vale_extract" -type f -name 'vale' | head -n1)"
          sudo install -m 755 "$VALE_PATH" /usr/local/bin/vale
          vale --version

      # ---------- Vale (use a temp config with NO vocab) ----------
      - name: Run Vale (non-blocking with temp config)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p styles
          cat > .vale.ci.ini <<'EOF'
          StylesPath = styles
          MinAlertLevel = warning
          Packages = Google

          [*.md]
          BasedOnStyles = Google
          Google.Headings = NO
          EOF

          # Pull Google style package for this config
          vale sync --config=.vale.ci.ini

          # Run without failing the job
          vale --config=.vale.ci.ini --no-exit .
